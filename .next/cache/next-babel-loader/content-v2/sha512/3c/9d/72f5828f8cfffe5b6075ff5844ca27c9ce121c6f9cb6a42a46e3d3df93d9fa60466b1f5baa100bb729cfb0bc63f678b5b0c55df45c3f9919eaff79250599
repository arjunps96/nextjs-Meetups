{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\React_Update\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction Meetups(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Meetups;\nexport var __N_SSG = true;\nexport default Meetups;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meetups\");","map":{"version":3,"sources":["E:/React_Update/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","Meetups","props","meetups"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQF,O;;AA2CT,eAAeA,OAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\";\r\nfunction Meetups(props) {\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetups = await mongoCollections.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    fallback: \"blocking\",\r\n    path: meetups.map((meetup) => ({\r\n      params: { meetup_Id: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetups = await mongoCollections.find().toArray();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default Meetups;\r\n"]},"metadata":{},"sourceType":"module"}