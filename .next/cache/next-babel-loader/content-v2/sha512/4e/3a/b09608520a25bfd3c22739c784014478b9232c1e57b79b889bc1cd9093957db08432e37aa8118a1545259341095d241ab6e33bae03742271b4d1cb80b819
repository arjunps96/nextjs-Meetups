{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\React_Update\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupItem, {\n    image: props.meetup.image,\n    address: props.meetup.address,\n    title: props.meetup.title,\n    description: props.meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["E:/React_Update/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["useRouter","MeetupItem","MeetupDetails","props","meetup","image","address","title","description"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,UAAP,MAAuB,qCAAvB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,MAAN,CAAaC,KADtB;AAEE,IAAA,OAAO,EAAEF,KAAK,CAACC,MAAN,CAAaE,OAFxB;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,MAAN,CAAaG,KAHtB;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,MAAN,CAAaI;AAJ5B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,a;;AAkDT,eAAeA,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupItem\r\n      image={props.meetup.image}\r\n      address={props.meetup.address}\r\n      title={props.meetup.title}\r\n      description={props.meetup.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetups = await mongoCollections.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n    fallback: true,\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetup_Id = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetup = await mongoCollections.findOne({ _id: ObjectId(meetup_Id) });\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}