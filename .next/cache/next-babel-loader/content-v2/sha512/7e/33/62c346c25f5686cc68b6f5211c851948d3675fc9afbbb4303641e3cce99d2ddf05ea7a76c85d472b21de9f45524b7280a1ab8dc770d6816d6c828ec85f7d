{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\React_Update\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetup-Id]\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\n\nfunction MeetupDetails(props) {\n  _s();\n\n  var route = useRouter();\n  var meetupId = route.query.meetup - Id;\n  return /*#__PURE__*/_jsxDEV(MeetupItem, {\n    image: props.meetup.image,\n    address: props.meetup.address,\n    title: props.meetup.title,\n    description: props.meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MeetupDetails, \"JD5qVJBo0MNDbUb5oI+DMKChels=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["E:/React_Update/06-onwards-to-a-bigger-project-starting-project/pages/[meetup-Id]/index.js"],"names":["useRouter","MeetupItem","MeetupDetails","props","route","meetupId","query","meetup","Id","image","address","title","description"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,UAAP,MAAuB,qCAAvB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,MAAMC,KAAK,GAAGJ,SAAS,EAAvB;AACA,MAAMK,QAAQ,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,GAAqBC,EAAtC;AACA,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAEL,KAAK,CAACI,MAAN,CAAaE,KADtB;AAEE,IAAA,OAAO,EAAEN,KAAK,CAACI,MAAN,CAAaG,OAFxB;AAGE,IAAA,KAAK,EAAEP,KAAK,CAACI,MAAN,CAAaI,KAHtB;AAIE,IAAA,WAAW,EAAER,KAAK,CAACI,MAAN,CAAaK;AAJ5B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAXQV,a;UACOF,S;;;KADPE,a;;AAmDT,eAAeA,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\r\nfunction MeetupDetails(props) {\r\n  const route = useRouter();\r\n  const meetupId = route.query.meetup - Id;\r\n  return (\r\n    <MeetupItem\r\n      image={props.meetup.image}\r\n      address={props.meetup.address}\r\n      title={props.meetup.title}\r\n      description={props.meetup.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetups = await mongoCollections.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    path: meetups.map((meetup) => ({\r\n      params: { meetup_Id: meetup._id.toString() },\r\n    })),\r\n    fallback: true,\r\n  };\r\n}\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetup = await mongoCollections.findOne({ id: meetupId });\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}