{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\React_Update\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetup-Id]\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\n\nfunction MeetupDetails(props) {\n  const route = useRouter();\n  const meetupId = route.query.meetup - Id;\n  return /*#__PURE__*/_jsxDEV(MeetupItem, {\n    image: props.meetup.image,\n    address: props.meetup.address,\n    title: props.meetup.title,\n    description: props.meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const mongoCollections = db.collection(\"meetups\");\n  const meetups = await mongoCollections.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetup_Id: meetup._id.toString()\n      }\n    })),\n    fallback: true\n  };\n}\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const mongoCollections = db.collection(\"meetups\");\n  const meetup = await mongoCollections.findOne({\n    id: meetupId\n  });\n  return {\n    props: {\n      meetup: {\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/React_Update/06-onwards-to-a-bigger-project-starting-project/pages/[meetup-Id]/index.js"],"names":["useRouter","MongoClient","MeetupItem","MeetupDetails","props","route","meetupId","query","meetup","Id","image","address","title","description","getStaticPaths","client","connect","db","mongoCollections","collection","meetups","find","_id","toArray","paths","map","params","meetup_Id","toString","fallback","getStaticProps","findOne","id"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,KAAK,GAAGL,SAAS,EAAvB;AACA,QAAMM,QAAQ,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,GAAqBC,EAAtC;AACA,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAEL,KAAK,CAACI,MAAN,CAAaE,KADtB;AAEE,IAAA,OAAO,EAAEN,KAAK,CAACI,MAAN,CAAaG,OAFxB;AAGE,IAAA,KAAK,EAAEP,KAAK,CAACI,MAAN,CAAaI,KAHtB;AAIE,IAAA,WAAW,EAAER,KAAK,CAACI,MAAN,CAAaK;AAJ5B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,sGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAajB,MAAD,KAAa;AAC9BkB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,SAAS,EAAEnB,MAAM,CAACc,GAAP,CAAWM,QAAX;AAAb;AADsB,KAAb,CAAZ,CADF;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAAP;AAMD;AACD,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMf,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CACnB,sGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMX,MAAM,GAAG,MAAMU,gBAAgB,CAACa,OAAjB,CAAyB;AAAEC,IAAAA,EAAE,EAAE1B;AAAN,GAAzB,CAArB;AACA,SAAO;AACLF,IAAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAE;AACNI,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KADR;AAEND,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAFV;AAGND,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAHR;AAING,QAAAA,WAAW,EAAEL,MAAM,CAACK;AAJd;AADH;AADF,GAAP;AAUD;AAED,eAAeV,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\r\nfunction MeetupDetails(props) {\r\n  const route = useRouter();\r\n  const meetupId = route.query.meetup - Id;\r\n  return (\r\n    <MeetupItem\r\n      image={props.meetup.image}\r\n      address={props.meetup.address}\r\n      title={props.meetup.title}\r\n      description={props.meetup.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetups = await mongoCollections.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetup_Id: meetup._id.toString() },\r\n    })),\r\n    fallback: true,\r\n  };\r\n}\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetup = await mongoCollections.findOne({ id: meetupId });\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}