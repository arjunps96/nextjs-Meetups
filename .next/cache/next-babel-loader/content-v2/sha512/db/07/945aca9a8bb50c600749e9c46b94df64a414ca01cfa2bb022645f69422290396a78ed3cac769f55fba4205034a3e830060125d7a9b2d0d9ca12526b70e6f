{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\React_Update\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupItem, {\n    image: props.meetup.image,\n    address: props.meetup.address,\n    title: props.meetup.title,\n    description: props.meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const mongoCollections = db.collection(\"meetups\");\n  const meetups = await mongoCollections.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: true\n  };\n}\nexport async function getStaticProps(context) {\n  const meetup_Id = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const mongoCollections = db.collection(\"meetups\");\n  const meetup = await mongoCollections.findOne({\n    id: ObjectId(meetup_Id)\n  });\n  return {\n    props: {\n      meetup: {\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/React_Update/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["useRouter","MongoClient","ObjectId","MeetupItem","MeetupDetails","props","meetup","image","address","title","description","getStaticPaths","client","connect","db","mongoCollections","collection","meetups","find","_id","toArray","paths","map","params","meetupId","toString","fallback","getStaticProps","context","meetup_Id","findOne","id"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,MAAN,CAAaC,KADtB;AAEE,IAAA,OAAO,EAAEF,KAAK,CAACC,MAAN,CAAaE,OAFxB;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,MAAN,CAAaG,KAHtB;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,MAAN,CAAaI;AAJ5B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,sGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAahB,MAAD,KAAa;AAC9BiB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAElB,MAAM,CAACa,GAAP,CAAWM,QAAX;AAAZ;AADsB,KAAb,CAAZ,CADF;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAAP;AAMD;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,SAAS,GAAGD,OAAO,CAACL,MAAR,CAAeC,QAAjC;AACA,QAAMZ,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,sGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMV,MAAM,GAAG,MAAMS,gBAAgB,CAACe,OAAjB,CAAyB;AAAEC,IAAAA,EAAE,EAAE7B,QAAQ,CAAC2B,SAAD;AAAd,GAAzB,CAArB;AACA,SAAO;AACLxB,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNG,QAAAA,KAAK,EAAEH,MAAM,CAACG,KADR;AAEND,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFV;AAGND,QAAAA,KAAK,EAAED,MAAM,CAACC,KAHR;AAING,QAAAA,WAAW,EAAEJ,MAAM,CAACI;AAJd;AADH;AADF,GAAP;AAUD;AAED,eAAeN,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupItem\r\n      image={props.meetup.image}\r\n      address={props.meetup.address}\r\n      title={props.meetup.title}\r\n      description={props.meetup.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetups = await mongoCollections.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n    fallback: true,\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetup_Id = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arjunps:EVnJ6DWUDqxnM4T@cluster0.6psjt.mongodb.net/Meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const mongoCollections = db.collection(\"meetups\");\r\n  const meetup = await mongoCollections.findOne({ id: ObjectId(meetup_Id) });\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}